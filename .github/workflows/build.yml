name: Build and Publish APK

on:
  push:
    branches:
      - ci/test
  workflow_dispatch:

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25  # 设置超时防止卡死
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.caching=true -Dorg.gradle.parallel=true"
      
    permissions:
      contents: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
          cache: yarn

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17.0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.8
          cache-disabled: false

      # 分层缓存策略
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/android/.gradle
          key: ${{ runner.os }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/yarn.lock') }}-v2

      # 并行安装依赖
      - name: Install Dependencies
        run: |
          yarn install --frozen-lockfile --prefer-offline &
          ./gradlew :app:dependencies --update-locks &
          wait

      - name: Prebuild
        run: yarn run prebuild:android

      - name: Build Release APK
        run: |
          cd android
          echo "$SIGN_KEYSTORE_BASE64" | base64 -d > "./app/$KEYSTORE_PATH"
          ./gradlew app:packageRelease --build-cache --configuration-cache --parallel --configure-on-demand
        env:
          KEYSTORE_PATH: 'keystore.jks'
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGN_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}
          SIGN_KEYSTORE_BASE64: ${{ secrets.SIGN_KEYSTORE_BASE64 }}

      - name: Prepare Release Assets
        id: prepare-assets
        shell: bash
        run: |
          version_code=$(grep 'versionCode' android/app/build.gradle | awk '{print $2}')
          version_name=$(grep 'versionName' android/app/build.gradle | awk -F '"' '{print $2}')
          changelog=$(git log -3 --pretty=format:"%s%n%b%n")

          echo "$version_code" > version-code
          echo "$version_name" > version-name
          echo "$changelog" > changelog

          apk_filename="FzuHelper_${version_name}(${version_code}).apk"
          cp android/app/build/outputs/apk/release/app-arm64-v8a-release.apk "${apk_filename}"
          echo "$apk_filename" > apk-filename
          
          echo "version_code=$version_code" >> $GITHUB_OUTPUT
          echo "version_name=$version_name" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "apk_filename=$apk_filename" >> $GITHUB_OUTPUT

          if git diff --quiet HEAD^ HEAD android/app; then
            echo "SKIP_RELEASE=true" >> $GITHUB_ENV
          fi
      
      - name: Create GitHub Release
        if: env.SKIP_RELEASE != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: beta
          name: "Beta"
          generate_release_notes: true  # 自动生成发布说明
          body: |
            ${{ steps.prepare-assets.outputs.changelog }}
            
            此版本为新架构测试版，请提前加入内测群 1020036141 了解详情
          prerelease: true
          files: |
            ${{ steps.prepare-assets.outputs.apk_filename }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            ${{ steps.prepare-assets.outputs.apk_filename }}
            version-code
            version-name
            changelog
            apk-filename
          retention-days: 0

  publish:
    runs-on: ubuntu-latest
    environment: beta
    needs:
      - build

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: artifacts

      - name: Load Metadata
        id: metadata
        shell: bash
        run: |
          echo "version_code=$(cat artifacts/version-code)" >> $GITHUB_OUTPUT
          echo "version_name=$(cat artifacts/version-name)" >> $GITHUB_OUTPUT
          echo "apk_filename=$(cat artifacts/apk-filename)" >> $GITHUB_OUTPUT
          echo "changelog=$(cat artifacts/changelog)" >> $GITHUB_OUTPUT

      - name: Get Upload Params
        id: upload-params
        run: |
          RESPONSE=$(curl --location --request POST 'https://fzuhelper.west2.online/api/v2/url/upload-params' \
            --form "password=$ANDROID_UPDATE_PWD")
          echo "UPYUN_POLICY=$(echo $RESPONSE | jq -r .policy)" >> "$GITHUB_OUTPUT"
          echo "UPYUN_AUTH=$(echo $RESPONSE | jq -r .authorization)" >> "$GITHUB_OUTPUT"
        env:
          ANDROID_UPDATE_PWD: ${{ secrets.ANDROID_UPDATE_PWD }}

      - name: Upload to UPYUN
        id: upload-apk
        run: |
          RESPONSE=$(curl -X POST "https://v0.api.upyun.com/fzuhelper-filedown" \          
            -F "file=@$APK_FILENAME" \
            -F "policy=$UPYUN_POLICY" \
            -F "authorization=$UPYUN_AUTH")

          DOWNLOAD_URL="https://download.w2fzu.com$(echo $RESPONSE | jq -r .url)"

          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> "$GITHUB_OUTPUT"
        env:
          APK_FILENAME: "artifacts/${{ steps.metadata.outputs.apk_filename }}"
          UPYUN_POLICY: ${{ steps.upload-params.outputs.UPYUN_POLICY }}
          UPYUN_AUTH: ${{ steps.upload-params.outputs.UPYUN_AUTH }}

      - name: Submit Version Info
        run: |
          FEATURE="$CHANGELOG"$'\n\n'"此版本为新架构测试版，请提前加入内测群 1020036141 了解详情"
          curl --location --request POST 'https://fzuhelper.west2.online/api/v2/url/upload' \
            --form "version=$APP_VERSION_NAME" \
            --form "code=$APP_VERSION_CODE" \
            --form "url=$DOWNLOAD_URL" \
            --form "feature=$FEATURE" \
            --form "type=$CHANNEL" \
            --form "password=$ANDROID_UPDATE_PWD" \
            --form "force=$FORCE"
        env:
          CHANNEL: beta
          FORCE: true
          ANDROID_UPDATE_PWD: ${{ secrets.ANDROID_UPDATE_PWD }}
          APP_VERSION_NAME: ${{ steps.metadata.outputs.version_name }}
          APP_VERSION_CODE: ${{ steps.metadata.outputs.version_code }}
          CHANGELOG: ${{ steps.metadata.outputs.changelog }}
          DOWNLOAD_URL: ${{ steps.upload-apk.outputs.DOWNLOAD_URL }}
